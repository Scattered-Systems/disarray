name: Rust

on:
  push:
    branches:
      - master
    tags:
      - latest
  pull_request:
    branches:
      - master
    tags:
      - latest

env:
  CARGO_TERM_COLOR: always

jobs:
  derive:
    env:
      CRATE: disarray-derive
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login
        run: cargo login ${{ secrets.CARGO_REGISTRY_TOKEN }}
      - name: Build and Push
        run: cargo publish --package $CRATE --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
  macros:
    env:
      CRATE: disarray-macros
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login
        run: cargo login ${{ secrets.CARGO_REGISTRY_TOKEN }}
      - name: Build and Push
        run: cargo publish --package $CRATE --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
  crate:
    env:
      CRATE: disarray
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [ derive, macros ]
    steps:
      - uses: actions/checkout@v3
      - name: Login
        run: cargo login ${{ secrets.CARGO_REGISTRY_TOKEN }}
      - name: Test
        run: cargo test --all-features --color $CARGO_TERM_COLOR --package $CRATE --release --verbose
      - name: Build and Push
        run: cargo publish --all-features --package $CRATE --token ${{ secrets.CARGO_REGISTRY_TOKEN }}